"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3281],{18850:function(e,a,t){t.r(a);t(72269),t(93359),t(61788),t(19977),t(25809);var l=t(90978),n=(t(96057),t(64406),t(36930),t(85956)),u=t(65978),r=t(67294),s=t(57962);a.default=function(){return r.createElement(n.dY,null,r.createElement(r.Suspense,{fallback:r.createElement(u.Z,null)},r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("p",null,s.texts[0].value,r.createElement("br",null),s.texts[1].value,r.createElement("br",null),s.texts[2].value,r.createElement("em",null,s.texts[3].value),s.texts[4].value,r.createElement("code",null,s.texts[5].value),s.texts[6].value,r.createElement("br",null),s.texts[7].value,r.createElement("em",null,s.texts[8].value),s.texts[9].value,r.createElement("br",null),s.texts[10].value,r.createElement("em",null,s.texts[11].value),s.texts[12].value,r.createElement("br",null),s.texts[13].value,r.createElement("em",null,s.texts[14].value),s.texts[15].value,r.createElement("br",null),s.texts[16].value,r.createElement("em",null,s.texts[17].value),s.texts[18].value,r.createElement("br",null),s.texts[19].value,r.createElement("em",null,s.texts[20].value),s.texts[21].value,r.createElement("br",null),s.texts[22].value,r.createElement("em",null,s.texts[23].value),s.texts[24].value,r.createElement("br",null),s.texts[25].value,r.createElement("em",null,s.texts[26].value),s.texts[27].value,r.createElement("br",null),s.texts[28].value,r.createElement("em",null,s.texts[29].value),s.texts[30].value,r.createElement("em",null,s.texts[31].value),s.texts[32].value,r.createElement("em",null,s.texts[33].value),s.texts[34].value,r.createElement("br",null),s.texts[35].value,r.createElement("em",null,s.texts[36].value),s.texts[37].value,r.createElement("br",null),s.texts[38].value,r.createElement("em",null,s.texts[39].value),s.texts[40].value,r.createElement("br",null),s.texts[41].value,r.createElement("em",null,s.texts[42].value),s.texts[43].value,r.createElement("strong",null,s.texts[44].value),s.texts[45].value,r.createElement("strong",null,s.texts[46].value),s.texts[47].value,r.createElement("br",null),s.texts[48].value,r.createElement("em",null,s.texts[49].value),s.texts[50].value,r.createElement("br",null),s.texts[51].value,r.createElement("em",null,s.texts[52].value),s.texts[53].value,r.createElement("br",null),s.texts[54].value,r.createElement("em",null,s.texts[55].value),s.texts[56].value),r.createElement("p",null,s.texts[57].value,r.createElement("strong",null,r.createElement("em",null,s.texts[58].value)),s.texts[59].value,r.createElement(n.rU,{to:"/zh/docs/api/graphic-style"},s.texts[60].value),s.texts[61].value,r.createElement("em",null,s.texts[62].value),s.texts[63].value),r.createElement(l.Z,{lang:"plain"},s.texts[64].value),r.createElement("p",null,s.texts[65].value),r.createElement(l.Z,{lang:"ts"},s.texts[66].value)))))}},47407:function(e,a,t){t.d(a,{T:function(){return l.T}});var l=t(27822)},56184:function(e,a,t){t.d(a,{p:function(){return l.p}});var l=t(67810)},62207:function(e,a,t){t.d(a,{G:function(){return l.G}});var l=t(1834)},71362:function(e,a,t){t.d(a,{S:function(){return l.S}});var l=t(97137)},57962:function(e,a,t){t.r(a),t.d(a,{texts:function(){return l}});const l=[{value:"| Properties | Type                                                         | Description                                                                                                                                                      |",paraId:0},{value:"\n| ---------- | ------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----- | --------- |",paraId:0},{value:"\n| type       | ",paraId:0},{value:"string",paraId:0},{value:"                                                     | When a user uses a custom label type, need to declare the specific type, otherwise you will use the default label type rendering (pie chart label support ",paraId:0},{value:"inner | outer | spiders",paraId:0},{value:") |",paraId:0},{value:"\n| offset     | ",paraId:0},{value:"number",paraId:0},{value:"                                                     | label offset                                                                                                                                                     |",paraId:0},{value:"\n| offsetX    | ",paraId:0},{value:"number",paraId:0},{value:"                                                     | The offset distance of the label from the data point in the X direction                                                                                          |",paraId:0},{value:"\n| offsetY    | ",paraId:0},{value:"number",paraId:0},{value:"                                                     | The offset distance of the label from the data point in the Y direction                                                                                          |",paraId:0},{value:"\n| content    | ",paraId:0},{value:"string | IGroup | IShape | GeometryLabelContentCallback",paraId:0},{value:" | Text content that is displayed, if not declared, is displayed according to the value of the first field participating in the mapping                             |",paraId:0},{value:"\n| style      | ",paraId:0},{value:"ShapeAttrs",paraId:0},{value:"                                                       | Label text graphic property style                                                                                                                                |",paraId:0},{value:"\n| autoRotate | ",paraId:0},{value:"string",paraId:0},{value:"                                                     | Whether to rotate automatically, default true                                                                                                                    |",paraId:0},{value:"\n| rotate     | ",paraId:0},{value:"number",paraId:0},{value:"                                                     | Text rotation angle, unit is radian, clockwise rotation                                                                                                                                              |",paraId:0},{value:"\n| labelLine  | ",paraId:0},{value:"null",paraId:0},{value:" | ",paraId:0},{value:"boolean",paraId:0},{value:" | ",paraId:0},{value:"LabelLineCfg",paraId:0},{value:"                               | Used to set the style property of the text connector. NULL indicates that it is not displayed.                                                                   |",paraId:0},{value:"\n| labelEmit  | ",paraId:0},{value:"boolean",paraId:0},{value:"                                                    | Only applies to text in polar coordinates, indicating whether the text is radially displayed according to the angle. True means on and false means off           |",paraId:0},{value:"\n| layout     | ",paraId:0},{value:"'overlap' | 'fixedOverlap' | 'limitInShape'",paraId:0},{value:"              | Text layout type, support a variety of layout function combination.                                                                                              |",paraId:0},{value:"\n| position   | ",paraId:0},{value:"'top' | 'bottom' | 'middle' | 'left' | 'right'",paraId:0},{value:"         | Specifies the position of the current Label relative to the current graphic   (ðŸ’¡ Attention: Only works for ",paraId:0},{value:"column plot",paraId:0},{value:" and ",paraId:0},{value:"bar plot",paraId:0},{value:", which geometry is interval)                                                                                   |",paraId:0},{value:"\n| animate    | ",paraId:0},{value:"boolean | AnimateOption",paraId:0},{value:"                                   | Animation configuration.                                                                                                                                         |",paraId:0},{value:"\n| formatter  | ",paraId:0},{value:"Function",paraId:0},{value:"                                                   | Format function                                                                                                                                                  |",paraId:0},{value:"\n| autoHide   | ",paraId:0},{value:"boolean",paraId:0},{value:"                                                    | Whether to hide it automatically, default to false                                                                                                               |",paraId:0},{value:"Types of ",paraId:1},{value:"LabelLineCfg",paraId:1},{value:" are as follow: (Go ",paraId:1},{value:"ShapeAttrs",paraId:2},{value:" see more details about ",paraId:1},{value:"ShapeAttrs",paraId:1},{value:")",paraId:1},{value:"type LabelLineCfg = {\n  style?: ShapeAttrs;\n}\n",paraId:3},{value:"Example code:",paraId:4},{value:"{\n  label: {\n    style: {\n      fill: 'red',\n      opacity: 0.6,\n      fontSize: 24\n    }\n  }\n}\n",paraId:5}]}}]);