"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2792],{20038:function(e,t,n){n.r(t);n(72269),n(93359),n(61788),n(19977),n(25809);var l=n(90978),a=(n(96057),n(64406),n(36930),n(85956)),r=n(65978),u=n(67294),c=n(69887);t.default=function(){return u.createElement(a.dY,null,u.createElement(u.Suspense,{fallback:u.createElement(r.Z,null)},u.createElement(u.Fragment,null,u.createElement("div",{className:"markdown"},u.createElement("h4",{id:"iplottype"},u.createElement("a",{"aria-hidden":"true",tabIndex:"-1",href:"#iplottype"},u.createElement("span",{className:"icon icon-link"})),"IPlot.type"),u.createElement("p",null,u.createElement("description",null,u.createElement("strong",null,c.texts[0].value),c.texts[1].value,u.createElement("em",null,c.texts[2].value))),u.createElement("p",null,c.texts[3].value),u.createElement("p",null,c.texts[4].value),u.createElement("ul",null,u.createElement("li",null,u.createElement("strong",null,c.texts[5].value),c.texts[6].value,u.createElement("code",null,c.texts[7].value)),u.createElement("li",null,u.createElement("strong",null,c.texts[8].value),c.texts[9].value,u.createElement("code",null,c.texts[10].value))),u.createElement("h4",{id:"iplotoptions"},u.createElement("a",{"aria-hidden":"true",tabIndex:"-1",href:"#iplotoptions"},u.createElement("span",{className:"icon icon-link"})),"IPlot.options"),u.createElement("p",null,u.createElement("description",null,u.createElement("strong",null,c.texts[11].value),c.texts[12].value,u.createElement("em",null,c.texts[13].value))),u.createElement("p",null,c.texts[14].value),u.createElement("p",null,c.texts[15].value,u.createElement(a.rU,{to:"/en/docs/api/plots/column"},c.texts[16].value)),u.createElement("div",{className:"sign"},u.createElement(l.Z,{lang:"ts"},c.texts[17].value))))))}},47407:function(e,t,n){n.d(t,{T:function(){return l.T}});var l=n(27822)},56184:function(e,t,n){n.d(t,{p:function(){return l.p}});var l=n(67810)},62207:function(e,t,n){n.d(t,{G:function(){return l.G}});var l=n(1834)},71362:function(e,t,n){n.d(t,{S:function(){return l.S}});var l=n(97137)},69887:function(e,t,n){n.r(t),n.d(t,{texts:function(){return l}});const l=[{value:"required",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"string",paraId:0,tocIndex:0},{value:"plot 类型，通过传入指定 type 的 plot，可以在图层上渲染 G2Plot 内置的图表。",paraId:1,tocIndex:0},{value:"目前开放的图表类型有以下类型：",paraId:2,tocIndex:0},{value:"基础图表",paraId:3,tocIndex:0},{value:"：",paraId:3,tocIndex:0},{value:"'line' | 'pie' | 'column' | 'bar' | 'area' | 'gauge' | 'scatter' | 'histogram' | 'funnel",paraId:3,tocIndex:0},{value:"迷你图表",paraId:3,tocIndex:0},{value:"：",paraId:3,tocIndex:0},{value:"'tiny-line' | 'tiny-column' | 'tiny-area' | 'progress' | 'ring-progress'",paraId:3,tocIndex:0},{value:"required",paraId:4,tocIndex:1},{value:" ",paraId:4,tocIndex:1},{value:"object[]",paraId:4,tocIndex:1},{value:"plot 的具体配置项。每个 plot 都有自己的图层容器设置（不包括：width, height）以及数据、字段、样式等配置。",paraId:5,tocIndex:1},{value:"具体配置项见指定 plot 的 API 文档. 如：type='column'时，options 对应 ColumnOptions，见文档: ",paraId:6,tocIndex:1},{value:"Column API",paraId:7,tocIndex:1},{value:"type IPlot =\n  | {\n      type: 'line';\n      options: Omit<LineOptions, 'width' | 'height'>;\n    }\n  | {\n      type: 'pie';\n      options: Omit<PieOptions, 'width' | 'height'>;\n    }\n  | {\n      // ... 等等\n    };\n",paraId:8,tocIndex:1}]}}]);